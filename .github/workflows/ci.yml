name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    env:
      POETRY_VERSION: "1.8.2"
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: 📦 Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - --version $POETRY_VERSION
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: ♻️ Configure Poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}

      - name: 📥 Install dependencies (no‑root)
        run: |
          poetry env use 3.11
          poetry install --with dev --no-interaction --no-root

      - name: 🔍 Static code analysis (black, isort, flake8)
        run: |
          poetry run black --check src tests
          poetry run isort --check-only src tests
          poetry run flake8 src tests

      - name: 🛡️ Security scan (bandit)
        run: poetry run bandit -r src -ll

      - name: 🧪 Run tests with coverage
        run: |
          poetry run pytest -q --cov=src --cov-fail-under=90

      - name: 📊 Upload coverage to Codecov (optional)
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ env.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          verbose: true
